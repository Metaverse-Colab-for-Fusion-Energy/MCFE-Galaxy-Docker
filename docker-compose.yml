secrets:
  GALAXY_STORAGE_PASSWORD:
    file: ./galaxy/secrets/GALAXY_STORAGE_PASSWORD

services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: ${PROJECT_NAME}-cloudflared
    restart: unless-stopped
    environment:
      - TUNNEL_TOKEN=eyJhIjoiZTk3ZjM1OGM3NTc5ZjdkYjJlNDVmNTI2OTE1MzgxMzYiLCJ0IjoiYTRmNzI2MjgtYmRlYy00M2M4LWIwOWQtOTU2YWE1N2U2ODU5IiwicyI6IlltWTRabVV5WWpZdE56TmxPUzAwWVdRMUxUazJPVFV0WldOaVpHRTJOR0U1TkdRMyJ9
    command:
      tunnel --no-autoupdate run
    networks:
      - galaxy

  galaxy:
    image: galaxy/galaxy-min:24.2.2
    restart: unless-stopped
    group_add:
      - ${DOCKER_GID}
    depends_on:
      galaxy-postgres:
        condition: service_healthy
    container_name: ${PROJECT_NAME}-galaxy
    ports:
      - 8080:8080
    volumes:
      # Persistant storage for Galaxy
      - galaxy-store:/galaxy/server/
      # Populate the instance
      - ./galaxy/init/bootstrap.py:/galaxy/server/bootstrap.py
      - ./galaxy/tools:/galaxy-tools
      # Add custom configuration files
      - ./galaxy/config/tool_conf.xml:/galaxy/server/config/tool_conf.xml.sample
      - ./galaxy/config/job_conf.xml:/galaxy/server/config/job_conf.xml 
      - ./galaxy/config/galaxy.yml:/galaxy/server/config/galaxy.yml
      - ./galaxy/config/datatypes_conf.xml:/galaxy/server/config/datatypes_conf.xml
      # Provide docker-in-docker
      - /usr/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock:ro
    post_start:
      - command: sh -c "chown -R 101:101 /galaxy/server/tools/"
        user: root
      - command: sh -c "cp -r /galaxy-tools/* /galaxy/server/tools/"
    networks:
      - galaxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 30s
      retries: 5

  galaxy-bootstrap:
    image: galaxy/galaxy-min:24.1.3
    container_name: ${PROJECT_NAME}-galaxy-bootstrap
    environment:
      - GALAXY_URL=http://${PROJECT_NAME}-galaxy:8080
      - GALAXY_API_KEY=${GALAXY_API_KEY}
      - GALAXY_ADMIN_USERNAME=${GALAXY_ADMIN_USER}
      - GALAXY_ADMIN_EMAIL=${GALAXY_ADMIN_EMAIL}
      - GALAXY_ADMIN_PASSWORD=${GALAXY_ADMIN_PASS}
    depends_on:
      galaxy:
        condition: service_healthy
    volumes:
      - ./galaxy/init/bootstrap.py:/bootstrap.py
      - ./galaxy/workflows:/galaxy-workflows
    networks:
      - galaxy
    entrypoint: ["python"]
    command: ["/bootstrap.py"]
    
  galaxy-postgres:
    container_name: ${PROJECT_NAME}-galaxy-postgres
    image: postgres
    restart: unless-stopped
    secrets: [GALAXY_STORAGE_PASSWORD]
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: galaxy
      POSTGRES_PASSWORD_FILE: /run/secrets/GALAXY_STORAGE_PASSWORD
      POSTGRES_DB: galaxy
    networks:
      - galaxy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U galaxy"]
      interval: 5s
      timeout: 5s
      retries: 5    

networks:
  galaxy:

volumes:
  galaxy-store:
